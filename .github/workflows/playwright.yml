name: Playwright Tests
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 18
    - uses: pnpm/action-setup@v2
      name: Install pnpm
      id: pnpm-install
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      id: pnpm-cache
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

    - uses: actions/cache@v3
      name: Setup pnpm cache
      with:
        path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install

    - name: Store Playwright's Version
      run: |
        PLAYWRIGHT_VERSION=$(pnpm ls @playwright/test | grep @playwright | sed 's/.*@//')
        echo "Playwright's Version: $PLAYWRIGHT_VERSION"
        echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

    - name: Cache Playwright Browsers for Playwright's Version
      id: cache-playwright-browsers
      uses: actions/cache@v3
      with:
        path: ~/.cache/ms-playwright
        key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

    - name: Setup Playwright
      if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
      run: pnpm exec playwright install --with-deps

    - name: Install Playwright Browsers
      run: pnpm exec playwright install --with-deps

    - name: Start Server and run Playwright tests
      run: |
        pnpm run start &
        pnpm exec playwright test

    - uses: actions/upload-artifact@v3
      if: always()
      with:
        name: playwright-report
        path: playwright-report/
        retention-days: 30
