---
import {contentPostWindowPaginator} from "../../lib/content/contentPostWindowPaginator";
import PostWindow from "../post-window/PostWindow.astro";
import type {PostWindowProps} from "../../env";

const { page, collection } = Astro.props
const {posts, totalPages}  = await contentPostWindowPaginator(page, collection);

let collectionLink = '/'
if (collection) {
  collectionLink = '/' + collection + '/'
}

let prevLink: string | undefined
if (page == 2) {
  prevLink = collectionLink
} else if (page > 2) {
  prevLink = collectionLink + (page - 1)
}

const nextLink = collectionLink + (page * 1 + 1)
---
{prevLink && (
<div class="paginator paginator--margin-bottom">
  <a href={prevLink} class="paginator-link border shadow shadow--hover">
    Vorherige Seite
  </a>
</div>)}

<masonry-grid>
  {posts.map((post: PostWindowProps) => (
    <PostWindow post={post} />
  ))}
</masonry-grid>
{totalPages > page && (
<div class="paginator paginator--margin-top">
  <a href={nextLink} class="paginator-link border shadow shadow--hover">
    NÃ¤chste Seite
  </a>
</div>)}
<script>
  function debounce(func, wait) {
    let timeout;

    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };

      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  class MasonryGrid extends HTMLElement {
    debounceHandleResize = debounce(this.handleResize, 200);
    connectedCallback() {
      window.addEventListener('resize', this.debounceHandleResize);
    }
    disconnectedCallback() {
      window.removeEventListener('resize', this.debounceHandleResize);
    }
    handleResize() {
    }
  }
  customElements.define('masonry-grid', MasonryGrid);
</script>
<style>
  .masonry {
    overflow: hidden;
  }

  .paginator {
    display: flex;
    justify-content: center;
  }

  .paginator--margin-bottom {
    margin-bottom: 32px;
  }

  .paginator--margin-top {
    margin-top: 8px;
  }

  .paginator-link {
    display: block;

    padding: 16px 24px;

    color: var(--color-black);
    text-decoration: none;

    background: var(--color-white);
    border-radius: var(--border-radius);
  }
</style>
